{"ast":null,"code":"var _jsxFileName = \"/Users/amir/Desktop/project/playlist-generator/frontend/src/components/PlaylistGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistGenerator = () => {\n  _s();\n  const [mood, setMood] = useState('');\n  const [playlist, setPlaylist] = useState([]);\n  const [savedPlaylists, setSavedPlaylists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userId = 1; // Replace with dynamic user ID if available\n\n  // Fetch saved playlists for the user\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const response = await axios.get(`/api/playlist/user/${userId}`);\n        setSavedPlaylists(response.data.playlists);\n        setLoading(false);\n      } catch (error) {\n        console.error('Failed to fetch saved playlists', error);\n      }\n    };\n    fetchPlaylists();\n  }, [userId]);\n\n  // Handle playlist generation\n  const handleGeneratePlaylist = async () => {\n    try {\n      const response = await axios.post('/api/playlist/generate', {\n        mood,\n        userId\n      });\n      setPlaylist(response.data.playlist.songs); // Access the songs from the generated playlist\n    } catch (error) {\n      console.error('Failed to generate playlist', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playlist Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your mood\",\n        value: mood,\n        onChange: e => setMood(e.target.value),\n        style: {\n          marginRight: '10px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGeneratePlaylist,\n        style: {\n          padding: '5px 10px'\n        },\n        children: \"Generate Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), playlist.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), playlist.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), \" by \", song.artist, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: song.spotifyUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Listen on Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading playlists...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : savedPlaylists.length > 0 ? savedPlaylists.map(savedPlaylist => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: savedPlaylist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: savedPlaylist.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), savedPlaylist.songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '20px',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: song.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this), \" by \", song.artist, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: song.spotifyUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Listen on Spotify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this))]\n      }, savedPlaylist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No saved playlists found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistGenerator, \"SVY0Of1fvKBimW2GTSA5NnvxlIk=\");\n_c = PlaylistGenerator;\nexport default PlaylistGenerator;\nvar _c;\n$RefreshReg$(_c, \"PlaylistGenerator\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PlaylistGenerator","_s","mood","setMood","playlist","setPlaylist","savedPlaylists","setSavedPlaylists","loading","setLoading","userId","fetchPlaylists","response","get","data","playlists","error","console","handleGeneratePlaylist","post","songs","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginRight","onClick","length","marginTop","map","song","index","marginBottom","title","artist","href","spotifyUrl","rel","savedPlaylist","name","description","marginLeft","id","_c","$RefreshReg$"],"sources":["/Users/amir/Desktop/project/playlist-generator/frontend/src/components/PlaylistGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst PlaylistGenerator = () => {\n  const [mood, setMood] = useState('');\n  const [playlist, setPlaylist] = useState([]);\n  const [savedPlaylists, setSavedPlaylists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userId = 1; // Replace with dynamic user ID if available\n\n  // Fetch saved playlists for the user\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const response = await axios.get(`/api/playlist/user/${userId}`);\n        setSavedPlaylists(response.data.playlists);\n        setLoading(false);\n      } catch (error) {\n        console.error('Failed to fetch saved playlists', error);\n      }\n    };\n\n    fetchPlaylists();\n  }, [userId]);\n\n  // Handle playlist generation\n  const handleGeneratePlaylist = async () => {\n    try {\n      const response = await axios.post('/api/playlist/generate', { mood, userId });\n      setPlaylist(response.data.playlist.songs); // Access the songs from the generated playlist\n    } catch (error) {\n      console.error('Failed to generate playlist', error);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h2>Playlist Generator</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your mood\"\n          value={mood}\n          onChange={(e) => setMood(e.target.value)}\n          style={{ marginRight: '10px', padding: '5px' }}\n        />\n        <button onClick={handleGeneratePlaylist} style={{ padding: '5px 10px' }}>\n          Generate Playlist\n        </button>\n      </div>\n\n      {/* Display Generated Playlist */}\n      {playlist.length > 0 && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Generated Playlist</h3>\n          {playlist.map((song, index) => (\n            <div key={index} style={{ marginBottom: '10px' }}>\n              <strong>{song.title}</strong> by {song.artist}\n              <br />\n              <a href={song.spotifyUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                Listen on Spotify\n              </a>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Display Saved Playlists */}\n      <div style={{ marginTop: '40px' }}>\n        <h3>Saved Playlists</h3>\n        {loading ? (\n          <p>Loading playlists...</p>\n        ) : savedPlaylists.length > 0 ? (\n          savedPlaylists.map((savedPlaylist) => (\n            <div key={savedPlaylist.id} style={{ marginBottom: '20px' }}>\n              <h4>{savedPlaylist.name}</h4>\n              <p>{savedPlaylist.description}</p>\n              {savedPlaylist.songs.map((song, index) => (\n                <div key={index} style={{ marginLeft: '20px', marginBottom: '10px' }}>\n                  <strong>{song.title}</strong> by {song.artist}\n                  <br />\n                  <a href={song.spotifyUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    Listen on Spotify\n                  </a>\n                </div>\n              ))}\n            </div>\n          ))\n        ) : (\n          <p>No saved playlists found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PlaylistGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}