{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PlaylistGenerator=()=>{const[mood,setMood]=useState('');const[playlist,setPlaylist]=useState([]);const[savedPlaylists,setSavedPlaylists]=useState([]);const userId=1;// Hardcoded user ID for now\n// Fetch saved playlists\nuseEffect(()=>{const fetchPlaylists=async()=>{try{const response=await axios.get(\"http://localhost:5001/api/playlist/user/\".concat(userId));setSavedPlaylists(response.data.playlists);}catch(error){console.error('Failed to fetch saved playlists',error);}};fetchPlaylists();},[userId]);// Generate a new playlist\nconst handleGeneratePlaylist=async()=>{try{const response=await axios.post('http://localhost:5001/api/playlist/generate',{userId,mood});setPlaylist(response.data.playlist.songs);// Access songs from generated playlist\n}catch(error){console.error('Failed to generate playlist',error);}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Playlist Generator\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your mood\",value:mood,onChange:e=>setMood(e.target.value),style:{marginRight:'10px',padding:'5px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGeneratePlaylist,style:{padding:'5px 10px'},children:\"Generate Playlist\"})]}),playlist.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Generated Playlist\"}),playlist.map((song,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:song.title}),\" by \",song.artist,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"a\",{href:song.spotifyUrl,target:\"_blank\",rel:\"noopener noreferrer\",children:\"Listen on Spotify\"}),song.albumArt&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:song.albumArt,alt:\"\".concat(song.title,\" album art\"),style:{maxWidth:'100px'}})})]},index))]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'40px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Saved Playlists\"}),savedPlaylists.length>0?savedPlaylists.map(savedPlaylist=>/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{children:savedPlaylist.name}),/*#__PURE__*/_jsx(\"p\",{children:savedPlaylist.description}),savedPlaylist.songs.map((song,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:'20px',marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:song.title}),\" by \",song.artist,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"a\",{href:song.spotifyUrl,target:\"_blank\",rel:\"noopener noreferrer\",children:\"Listen on Spotify\"})]},index))]},savedPlaylist.id)):/*#__PURE__*/_jsx(\"p\",{children:\"No saved playlists found.\"})]})]});};export default PlaylistGenerator;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","PlaylistGenerator","mood","setMood","playlist","setPlaylist","savedPlaylists","setSavedPlaylists","userId","fetchPlaylists","response","get","concat","data","playlists","error","console","handleGeneratePlaylist","post","songs","style","padding","children","type","placeholder","value","onChange","e","target","marginRight","onClick","length","marginTop","map","song","index","marginBottom","title","artist","href","spotifyUrl","rel","albumArt","src","alt","maxWidth","savedPlaylist","name","description","marginLeft","id"],"sources":["/Users/amir/Desktop/project/playlist-generator/frontend/src/components/PlaylistGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst PlaylistGenerator = () => {\n  const [mood, setMood] = useState('');\n  const [playlist, setPlaylist] = useState([]);\n  const [savedPlaylists, setSavedPlaylists] = useState([]);\n  const userId = 1; // Hardcoded user ID for now\n\n  // Fetch saved playlists\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/api/playlist/user/${userId}`);\n        setSavedPlaylists(response.data.playlists);\n      } catch (error) {\n        console.error('Failed to fetch saved playlists', error);\n      }\n    };\n\n    fetchPlaylists();\n  }, [userId]);\n\n  // Generate a new playlist\n  const handleGeneratePlaylist = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/api/playlist/generate', {\n        userId,\n        mood,\n      });\n      setPlaylist(response.data.playlist.songs); // Access songs from generated playlist\n    } catch (error) {\n      console.error('Failed to generate playlist', error);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h2>Playlist Generator</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your mood\"\n          value={mood}\n          onChange={(e) => setMood(e.target.value)}\n          style={{ marginRight: '10px', padding: '5px' }}\n        />\n        <button onClick={handleGeneratePlaylist} style={{ padding: '5px 10px' }}>\n          Generate Playlist\n        </button>\n      </div>\n\n      {/* Generated Playlist */}\n      {playlist.length > 0 && (\n        <div style={{ marginTop: '20px' }}>\n          <h3>Generated Playlist</h3>\n          {playlist.map((song, index) => (\n            <div key={index} style={{ marginBottom: '10px' }}>\n              <strong>{song.title}</strong> by {song.artist}\n              <br />\n              <a href={song.spotifyUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                Listen on Spotify\n              </a>\n              {song.albumArt && (\n                <div>\n                  <img src={song.albumArt} alt={`${song.title} album art`} style={{ maxWidth: '100px' }} />\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Saved Playlists */}\n      <div style={{ marginTop: '40px' }}>\n        <h3>Saved Playlists</h3>\n        {savedPlaylists.length > 0 ? (\n          savedPlaylists.map((savedPlaylist) => (\n            <div key={savedPlaylist.id} style={{ marginBottom: '20px' }}>\n              <h4>{savedPlaylist.name}</h4>\n              <p>{savedPlaylist.description}</p>\n              {savedPlaylist.songs.map((song, index) => (\n                <div key={index} style={{ marginLeft: '20px', marginBottom: '10px' }}>\n                  <strong>{song.title}</strong> by {song.artist}\n                  <br />\n                  <a href={song.spotifyUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    Listen on Spotify\n                  </a>\n                </div>\n              ))}\n            </div>\n          ))\n        ) : (\n          <p>No saved playlists found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PlaylistGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}